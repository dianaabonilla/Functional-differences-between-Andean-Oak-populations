##################################
####PCA ENVRONMENTAL VARIABLES####
##################################

# To analyze the environmental variables of each population (Arcabuco, Chicaque and Encino)
# we extract climatic data from worldclim raster layers using the sampling coordinates.

# Step 1: Import Dataset with coordinates and load packages

COORDENADAS <- read.csv2("~/TRABAJO/ARTICULO ROBLEDALES/COORDENADAS_SITOS_DE_MUESTREO.csv")

library(tidyverse)
library(patchwork)
library(car)
library(raster)
library(maps)
library("FactoMineR")
library("factoextra")
library("Rcpp")
library("RColorBrewer")

# Step 2: Make dataframes from coordinates to be able to use raster to extract values from raster layers

coords_sample_places = data.frame(
   lon = COORDENADAS$Longitude,
   lat = COORDENADAS$Latitude)
 
coordinates(coords_sample_places) = c("lon",
                                      "lat")
#Plot to make sure it works
map()
points(coords_sample_places, pch=3)

# Step 3: Import worldclim data

bio4 = raster("wc2.1_30s_bio/wc2.1_30s_bio_4.tif") #Temperature Seasonality 
bio5 = raster("wc2.1_30s_bio/wc2.1_30s_bio_5.tif") # Max Temperature of Warmest Month
bio6 = raster("wc2.1_30s_bio/wc2.1_30s_bio_6.tif") # Min Temperature of Coldest Month
bio13 = raster("wc2.1_30s_bio/wc2.1_30s_bio_13.tif") # Precipitation of Wettest Month
bio14 = raster("wc2.1_30s_bio/wc2.1_30s_bio_14.tif") # Precipitation of Driest Month
bio15 = raster("wc2.1_30s_bio/wc2.1_30s_bio_15.tif") #Precipitation Seasonality
elev = raster("wc2.1_30s_elev/wc2.1_30s_elev.tif") #Elevation

# Step 4: Extract data using coordinates

bio4_coords_sample_places = extract(x = bio4, y = coords_sample_places)
bio5_coords_sample_places = extract(x = bio5, y = coords_sample_places)                          
bio6_coords_sample_places = extract(x = bio6,y = coords_sample_places)                                       
bio13_coords_sample_places = extract(x = bio13,y = coords_sample_places)                                  
bio14_coords_sample_places = extract(x = bio14,y = coords_sample_places)
bio15_coords_sample_places = extract(x = bio15,y = coords_sample_places)
elev_coords_sample_places = extract(x = elev,y = coords_sample_places)

# Step 5: Reorder and rename data

bioclim_data = cbind(COORDENADAS[,1:3],
                                     bio4_coords_sample_places,
                                     bio5_coords_sample_places,
                                     bio6_coords_sample_places,
                                     bio13_coords_sample_places,
                                     bio14_coords_sample_places,
                                     bio15_coords_sample_places,
                                     elev_coords_sample_places)

bioclim_data = bioclim_data %>%
   rename(TS = bio4_coords_sample_places,
          Tmax = bio5_coords_sample_places,
          Tmin = bio6_coords_sample_places,
          Pmax = bio13_coords_sample_places,
          Pmin = bio14_coords_sample_places,
          PS = bio15_coords_sample_places,
          Elev = elev_coords_sample_places)

# Step 6: Principal Component Analysis (PCA)

res.pca <- PCA(bioclim_data[,4:ncol(bioclim_data)], scale.unit = TRUE, ncp = 2, graph = TRUE)

PCA_bioclim2 <-fviz_pca_biplot(res.pca, 
                             col.ind = bioclim_data$POBLACION, 
                             addEllipses = TRUE, label = "var",
                             col.var = "black", repel = TRUE,
                             legend.title = "Poblacion",  palette = c("#00AFBB", "#E7B800", "#FC4E07"))

#############################
####PCA FUNCTIONAL TRAITS####
#############################

# Step 1: Import Dataset

DATA <- read.csv2("~/TRABAJO/ARTICULO ROBLEDALES/DATA_ROBLEDALES.csv")

# Step 2: Filter data by ontogenetic stage

DTadultos <- DATA %>%
  filter(EDAD == "Adulto")
DTjuveniles <- DATA %>%
  filter(EDAD == "Juvenil")

# Omit NA's
DTadultos <- na.omit(DTadultos)
DTjuveniles <- na.omit(DTjuveniles)

# Step 3: Principal Component Analysis (PCA) by ontogenetic stage

# Adults
res.pca1 <- PCA(DTadultos[,4:ncol(DATA)], scale.unit = TRUE, ncp = 2, graph = TRUE)
PCAadultos<-fviz_pca_biplot(res.pca1, 
                            col.ind = DTadultos$POBLACION, 
                            addEllipses = TRUE, label = "var",
                            col.var = "black", repel = TRUE,
                            legend.title = "Poblacion",  palette = c("#00AFBB", "#E7B800", "#FC4E07"))

# Juveniles
res.pca2 <- PCA(DTjuveniles[,4:ncol(DATA)], scale.unit = TRUE, ncp = 2, graph = TRUE)
PCAjuveniles<-fviz_pca_biplot(res.pca2, 
                              col.ind = DTjuveniles$POBLACION, 
                              addEllipses = TRUE, label = "var",
                              col.var = "black", repel = TRUE,
                              legend.title = "Poblacion",  palette = c("#00AFBB", "#E7B800", "#FC4E07"))

# Step 4: Plot

require(gridExtra)
grid.arrange(PCAadultos,PCAjuveniles, ncol=1)

